long object.c
110 


the mapping of addition function:

ceval.c-> the main loop of the python compiler
 |
 V
 BINARY_OP_ADD_INT TARGET(BINARY_OP_ADD_INT)-> add the top two value in the stack
   |
	 V
	 longobject.c
	 	|
	 	V
	 	__long_add() -> x_add() -> while loop of c and returns carry




#=============ceval.c=================+#


#------------abstract.c----------------#
defination of function : PyObject_CallFunctionObjArgs()
PyObject *
PyObject_CallFunctionObjArgs(PyObject *callable, ...)
{

line ---> 2758 (python27)


PyObject_CallFunctionObjArgs -- > PyObject_Call --->	



##--end of functionPyObject_CallFunctionObjArgs --






#---------object.h=-------------------#

--1
ternary 
tp_call - > typedef PyObject * (*ternaryfunc)(PyObject *, PyObject *, PyObject *);


--2

definition of pyobject :

typedef struct _object {
    PyObject_HEAD
} PyObject;


